name: Python ONNX Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      model_type:
        description: 'Model type to test'
        required: true
        default: 'spam_detector'
        type: choice
        options:
          - spam_detector
          - news_classifier

jobs:
  test-python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd tests/spam_detector/python
        pip install -r requirements.txt
        
    - name: Run Python tests
      run: |
        cd tests/spam_detector/python
        pytest test_onnx_model.py -v
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: python-test-results
        path: |
          tests/spam_detector/python/test-results/
          tests/spam_detector/python/coverage/
        if-no-files-found: warn
        
    - name: Check performance thresholds
      run: |
        cd tests/spam_detector/python
        python -c "
        import json
        import sys
        try:
            with open('performance_results.json', 'r') as f:
                results = json.load(f)
            if results['avg_inference_time_ms'] > 100:
                print('❌ Average inference time exceeds threshold')
                sys.exit(1)
            if results['max_memory_mb'] > 500:
                print('❌ Maximum memory usage exceeds threshold')
                sys.exit(1)
            print('✅ Performance within acceptable thresholds')
        except Exception as e:
            print(f'❌ Error checking performance: {e}')
            sys.exit(1)
        " 